server.port=8081

###########################
### KAFKA
###########################

spring.kafka.bootstrap-servers=${KAFKA_CONNECTION_STRING:localhost:29092}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

spring.kafka.consumer.group-id=${KAFKA_CONSUMER_GROUP_ID:e2e-sample-delivery}
spring.kafka.consumer.auto-offset-reset=${KAFKA_CONSUMER_AUTO_OFFSET_RESET:latest}
spring.kafka.consumer.key-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.key.delegate.class=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.aws.peach.domain.*
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.isolation-level=read_committed

kafka.topic.delivery-change=${KAFKA_TOPIC_DELIVERY_CHANGE:delivery_change}

###########################
### JPA
###########################

spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}

spring.datasource.hikari.maximum-pool-size=${DB_MAX_POOL_SIZE:1}
spring.datasource.hikari.pool-name=HikariCP
spring.datasource.hikari.connection-test-query=SELECT 1
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.max-lifetime=1800000

spring.jpa.database=postgresql
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

spring.jpa.hibernate.use-new-id-generator-mappings=false
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.show-sql=false
spring.jpa.properties.hibernate.default_schema=${DB_SCHEMA:delivery}
spring.jpa.open-in-view=false

# caution: app will create the schema and destroy previous data
spring.sql.init.mode=always
spring.jpa.generate-ddl=false
spring.jpa.hibernate.ddl-auto=none